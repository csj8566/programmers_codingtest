def solution(n, money):
    answer = 0
    money.sort()
    
    # 1. 메모이제이션 배열 생성
    memo = [0 for _ in range(n+1)] # [0,0,0,0,0,0] # 인덱싱편의를 위해 n+1로
    
    
    # 2. 시작조건, 종료조건 설정 :
    # 시작조건 : 첫 2개 설정?
    # 종료조건 : 모든 화폐 다 돌았을 때
    
    # 0원만큼 낼 수 있는 방법은 아예 안내는 1가지뿐
    memo[0] = 1

    
    # 3. 점화식 설정 & 반복문 or 재귀 구현
    for coin in money:
        # 현재가격은 (현재가격-현재코인) 에다가 현재코인 하나 올려놓는거랑 같다
        # 따라서 (현재가격-현재코인) 을 만들 수 있는 경우의 수만큼 더해주면 됨
        # 1원만큼 내는 법은 아예 안내는 0원짜리 경우의수에 1원 살포시 올려놓는거
        
        # 1원을 이용해 만들 수 있는 가격들에다가 1원만으로만 만드는 경우의 수 추가...
        for i in range(coin, n+1):
            memo[i] += memo[i-coin] # ex) 현재 코인이 3원짜리라면
                                    # 3원을 만드는 방법은 0원에 3원추가,
                                    # 4원 만드는 법은 1원에 3원 추가 ......
    

    return memo[n]